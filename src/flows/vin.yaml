id: vin_flow
entry: ask_vin
states:
  ask_vin:
    prompt: "Отправьте VIN (17 символов, без I/O/Q)."
    expect: "vin"
    validate:
      regex: "^[A-HJ-NPR-Z0-9]{17}$"
      on_fail: "VIN выглядит некорректно. Проверьте длину и символы (без I,O,Q)."
    next: fetch_assemblies

  fetch_assemblies:
    action: "getAssembliesByVIN"
    loading: "Ищу узлы по вашему VIN..."
    on_error: "Не удалось получить данные по VIN. Попробуйте ещё раз."
    next: choose_assembly

  choose_assembly:
    render: "assembliesList"
    expect: "callback:assembly_id"
    next: fetch_parts

  fetch_parts:
    action: "getPartsByAssembly"
    loading: "Получаю детали..."
    on_error: "Не удалось получить список деталей."
    next: show_parts

  show_parts:
    render: "partsPaged"
    expect: "callback:part_action"
    branches:
      - when: "startsWith('x:')"
        next: show_crosses
      - when: "startsWith('cart:')"
        next: add_to_cart
      - when: "equals('next')"
        next: show_parts
      - when: "equals('prev')"
        next: show_parts

  show_crosses:
    action: "getCrossesByOEM"
    loading: "Получаю аналоги..."
    on_error: "Не удалось получить аналоги."
    render: "crossesList"
    next: show_parts

  add_to_cart:
    action: "addToCart"
    render: "cartConfirm"
    next: show_parts
